<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <beans:import resource="classpath:service.xml"/>
    <beans:import resource="classpath:jsonProviders.xml"/>

    <http pattern="/resources/**" security="none" />

    <http use-expressions="true" >
        <remember-me
                key="myAppKey"
                services-ref="rememberMeAuthenticationProvider"
                />
        <intercept-url pattern="/favicon.ico" access="isAnonymous()"/>
        <intercept-url pattern="/authentication/logout**" access="isAuthenticated()"/>
        <intercept-url pattern="/authentication/change**" access="isAuthenticated()"/>
        <intercept-url pattern="/authentication/**" access="permitAll()"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <!--<intercept-url pattern="/**" access="hasRole('ROLE_USER')"  />-->
        <!--<intercept-url pattern="/login" access="permitAll"/>-->
        <!--<intercept-url pattern="/logout" access="permitAll"/>-->
        <!--<intercept-url pattern="/login/index" access="permitAll"/>-->
        <!--<intercept-url pattern="/login/index" access="hasRole('ROLE_USER')"/>-->
        <!--<intercept-url pattern="/denied" access="hasRole('ROLE_USER')"/>-->
        <!--<intercept-url pattern="/" access="hasRole('ROLE_USER')"/>-->
        <!--<intercept-url pattern="/user" access="hasRole('ROLE_USER')"/>-->
        <!--<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>-->

        <!--<form-login login-page="/login"-->
                    <!--authentication-failure-url="/login/failure"-->
                    <!--default-target-url="/"/>-->

        <!--<access-denied-handler error-page="/denied"/>-->

        <!--<logout invalidate-session="true"-->
                <!--logout-success-url="/logout/success"-->
                <!--logout-url="/logout"/>-->
        <form-login login-page="/authentication/login" login-processing-url="/authentication/login" />
        <logout logout-url="/j_spring_security_logout" logout-success-url="/" delete-cookies="JSESSIONID" />

        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
        </session-management>
    </http>

    <beans:bean id="requestDataValueProcessor" class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"/>

    <beans:bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
            </beans:bean>
    	</beans:constructor-arg>
    </beans:bean>

    <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <beans:constructor-arg>
            <beans:list>
                <filter-chain pattern="/**"
                       filters="csrfFilter"
                />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userSecurityService">
            <password-encoder ref="encoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <beans:bean id="rememberMeAuthenticationProvider" class=
            "org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
                <beans:constructor-arg value="myAppKey" />
                <beans:constructor-arg ref="userSecurityService" />
                <beans:constructor-arg ref="jdbcTokenRepository" />
                <beans:property name="parameter" value="remember-me" />
                <beans:property name="alwaysRemember" value="true" />
                <beans:property name="tokenValiditySeconds" value="1209600"/>
                <beans:property name="useSecureCookie" value="true"/>
    </beans:bean>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <!--<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">-->
        <!--<beans:constructor-arg value="/authentication/login" />-->
    <!--</beans:bean>-->

</beans:beans>